name: Setup Site from Issue

on:
  issues:
    types: [opened, labeled]

jobs:
  setup-site:
    if: contains(github.event.issue.labels.*.name, 'setup')
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Parse issue and update config
        id: parse-issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            const issue = context.payload.issue;
            const body = issue.body;

            // Parse form fields - split by ### and process each section
            const fields = {};
            const sections = body.split(/\n### /).filter(s => s.trim());

            for (const section of sections) {
              const lines = section.split('\n');
              const key = lines[0].replace(/^### /, '').trim().toLowerCase().replace(/\s+/g, '_');
              const valueLines = lines.slice(1).join('\n').trim();
              
              let value = valueLines;
              
              // Handle checkbox lists
              if (value.includes('- [x]') || value.includes('- [ ]')) {
                const checked = [];
                const checkboxRegex = /- \[x\] (.+)/g;
                let checkMatch;
                while ((checkMatch = checkboxRegex.exec(value)) !== null) {
                  checked.push(checkMatch[1].trim());
                }
                value = checked;
              }
              
              if (value && value !== '_No response_' && value !== 'no' && value.length > 0) {
                fields[key] = value;
              }
            }

            console.log('Parsed fields:', JSON.stringify(fields, null, 2));

            // Load current config
            const configPath = './site.config.yml';
            const configContent = fs.readFileSync(configPath, 'utf8');
            const config = yaml.load(configContent);

            // Update site information
            if (fields.site_title) {
              config.site.title = fields.site_title;
            }
            if (fields.site_description) {
              config.site.description = fields.site_description;
            }
            if (fields.site_url) {
              config.site.url = fields.site_url;
              config.site.author.url = fields.site_url;
            }
            if (fields.author_name) {
              config.site.author.name = fields.author_name;
            }
            if (fields.author_email) {
              config.site.author.email = fields.author_email;
            }

            // Update social links
            if (fields.github_username) {
              config.social.github = fields.github_username;
            }
            if (fields.mastodon_profile_url) {
              config.social.mastodon = fields.mastodon_profile_url;
            }
            if (fields.bluesky_handle) {
              config.social.bluesky = fields.bluesky_handle;
            }

            // Update features based on checkboxes
            if (fields.enable_features && Array.isArray(fields.enable_features)) {
              const features = fields.enable_features;
              config.features.discussions.enabled = features.some(f => 
                f.toLowerCase().includes('github discussions') || f.toLowerCase().includes('discussions for comments')
              );
              config.features.webmentions.enabled = features.some(f => 
                f.toLowerCase().includes('webmentions')
              );
              config.features.rss.enabled = features.some(f => 
                f.toLowerCase().includes('rss')
              );
            }

            // Update post types based on checkboxes
            if (fields.enable_post_types && Array.isArray(fields.enable_post_types)) {
              const postTypes = fields.enable_post_types;
              config.postTypes.article.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('articles')
              );
              config.postTypes.note.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('notes')
              );
              config.postTypes.response.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('responses')
              );
              config.postTypes.bookmark.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('bookmarks')
              );
              config.postTypes.media.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('media')
              );
              config.postTypes.review.enabled = postTypes.some(pt => 
                pt.toLowerCase().includes('reviews')
              );
            }

            // Write updated config
            const updatedConfig = yaml.dump(config, {
              lineWidth: -1,
              noRefs: true
            });
            fs.writeFileSync(configPath, updatedConfig, 'utf8');

            console.log('Config updated successfully');
            core.setOutput('config_updated', 'true');

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Configure site from setup issue #${{ github.event.issue.number }}"
          title: "Site Configuration: ${{ github.event.issue.title }}"
          body: |
            This PR was automatically created from setup issue #${{ github.event.issue.number }}.

            ## Configuration Changes

            The following site configuration has been updated:
            - Site title, description, and URL
            - Author information
            - Social media links
            - Enabled features
            - Enabled post types

            Please review the changes to `site.config.yml` and merge to apply the configuration.

            Closes #${{ github.event.issue.number }}
          branch: "setup/issue-${{ github.event.issue.number }}"
          labels: "automated-setup"

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… Your site configuration has been updated! A pull request has been created. Once merged, your site will be configured with the settings you provided.'
            });
